spring.jpa.hibernate.ddl-auto=validate
spring.datasource.url=jdbc:mysql://localhost:3306/userservice
#${USER_SERVICE_DATABASE_URL}
#jdbc:mysql://user-service-db.cdgqawm6mdy8.us-east-1.rds.amazonaws.com:3306/userservice
spring.datasource.username=userservice
  #${USER_SERVICE_DATABASE_USERNAME}
#userservice
#spring.datasource.password=${USER_SERVICE_DATABASE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.show-sql: true
server.port=8181
# this will ensure userService will always open on port 8181

#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-id=oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret={noop}secret
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods[0]=client_secret_basic
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types[0]=authorization_code
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types[1]=refresh_token
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.redirect-uris[0]=http://127.0.0.1:8080/login/oauth2/code/oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.post-logout-redirect-uris[0]=http://127.0.0.1:8080/
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes[0]=openid
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes[1]=profile
#spring.security.oauth2.authorizationserver.require-authorization-consent=true

logging.level.org.springframework.security.* = trace
logging.level.org.springframework.web.* = trace